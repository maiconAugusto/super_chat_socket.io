<html>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
  <script src="https://unpkg.com/react@16/umd/react.production.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.1/socket.io.js" integrity="sha512-AcZyhRP/tbAEsXCCGlziPun5iFvcSUpEz2jKkx0blkYKbxU81F+iq8FURwPn1sYFeksJ+sDDrI5XujsqSobWdQ==" crossorigin="anonymous"></script>
  <script src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"></script>
  <script src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"></script>
  <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.20.0/axios.min.js" integrity="sha512-quHCp3WbBNkwLfYUMd+KwBAgpVukJu5MncuQaWXgCrfgcxCJAq/fo+oqrRKOj+UKEmyMCG3tb8RB63W+EmrOBg==" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jshashes/1.0.8/hashes.min.js" integrity="sha512-1HyPmPHvi5wFUctYkBhwOYgXmMdbPrDaXKBrbGRI3o1CQkTKazG/RKqR8QwVIjTDOQ3uAOPOFkEbzi99Td6yiQ==" crossorigin="anonymous"></script>
  <script src="https://www.gstatic.com/firebasejs/5.4.1/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/6.2.4/firebase-auth.js"></script>

    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.19.1/css/mdb.min.css" rel="stylesheet">
    <!-- JQuery -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.4/umd/popper.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.19.1/js/mdb.min.js"></script>
    <link rel="stylesheet" href=".">
<body>
  
<div id="mydiv"></div>
<script type="text/babel">
    const { useState, useEffect } = React

    const api = axios.create({baseURL: 'http://localhost:8000/'})
    const MD5 = new Hashes.MD5;

    function Chat() {
    
    const [message, setMessage] = useState('');
    const [messages, setMessages] = useState([]);
    const [validation, setValidation] = useState(true);
    const [info, setInfo] = useState(null);
    const [users, setUser] = useState([]);
    const socket = io('http://localhost:8000/');

    useEffect(() => {
        let firebaseConfig = {
            apiKey: "AIzaSyCoZHYHwhF10BqjtKnpGkL6v8AZN5KfJz0",
            authDomain: "chat-2c9a6.firebaseapp.com",
            databaseURL: "https://chat-2c9a6.firebaseio.com",
            projectId: "chat-2c9a6",
            storageBucket: "chat-2c9a6.appspot.com",
            messagingSenderId: "860755589448",
            appId: "1:860755589448:web:e42f06990a66c481f89b7d",
            measurementId: "G-CTNM62WSQG"
        };
        firebase.initializeApp(firebaseConfig);
    }, [])

    useEffect(()=> {
        socket.on('previusMessage', (data) => {
            setMessages(data)
        })
        socket.on('users', (data) => {
            setUser(data)
        })
    }, [])
 
    useEffect(() =>{
        socket.on('responseMessage', (data) => {
            setMessages(data)
        });
        socket.on('userLogged', (data) => {
            setUser(data)
        })
    },[])

    function sendMessage(event) {
        event.preventDefault()
        if (message === '') {
            return
        }
        let data = {
            info: info,
            message: message
        }
        socket.emit('messages', data)
        setMessage('')
    }

    function validations(event) {
        event.preventDefault()
        let provider = new firebase.auth.GoogleAuthProvider();
        firebase.auth().signInWithPopup(provider).then((res) => {
            const user = res.additionalUserInfo.profile;
            socket.emit('newUsers', user);
            setInfo(user)
            setValidation(false);
        })
    }
    
    function validationsFacebook(event) {
        event.preventDefault()
        let provider = new firebase.auth.FacebookAuthProvider();
        firebase.auth().signInWithPopup(provider).then((res) => {
            const user = res.additionalUserInfo.profile;
            socket.emit('newUsers', user);
            setValidation(false);
            console.log(user)
        })
    }

    return (
        <div  style={{display: 'flex', flexDirection: 'row',height: '100%',width: '100%',backgroundColor: '#5C5C5C'}}>
            {validation ? (
                <div style={{display: 'flex', width: '100%', height: '100%', justifyContent: 'center', alignItems: 'center'}}>
                    <div style={{display: 'flex',height: '40%' ,width: '35%', justifyContent: 'center', flexDirection: 'column', backgroundColor: 'white', borderRadius: 6}}>
                        <small style={{textAlign: 'center', fontSize: 18}} className="mb-3 font-weight-normal text-red">SUPER CHAT</small>
                        <form style={{padding: 20}}  className="form-signin">
                            <button style={{fontSize: 14, display: 'flex', flexDirection: 'row', justifyContent: 'center'}} className="btn btn-warning btn-block mt-2" onClick={(event) => validations(event)}>
                                <i class="far fa-envelope mr-3"></i>
                                <small>Login com o gmail</small>
                            </button>
                            <button style={{fontSize: 14, display: 'flex', flexDirection: 'row', justifyContent: 'center'}} className="btn  btn-dark btn-block mt-3" onClick={(event) => validationsFacebook(event)}>
                                <i className="fab fa-github pr-1 mr-3"></i>
                                <small>Login com Github</small>
                            </button>
                        </form>
                    </div>
                </div>
            ) : (
                <React.Fragment>
                    <div style={{display: 'flex', height: '100%',width: '70%', flexDirection: 'column'}}>
                        <div
                        style={{
                            display: 'flex', 
                            flexDirection: 'column', 
                            backgroundColor: 'white', 
                            height: '60%', 
                            minWidth: '100%',
                            margin: 20,
                            borderRadius: 4,
                            overflow: 'scroll'
                            }}>
                            <div data-spy="scroll"   data-target="#navbar" data-offset="0">
                                {messages.map(element => {
                                    return (
                                        element.info.name === info.name ? (
                                        <div id="navbar" style={{margin: 10, display: 'flex', flexDirection: 'column', alignItems: 'flex-end'}}>
                                            <div display={{display: 'flex', flexDirection: 'row'}}>
                                                <img style={{width: 30, borderRadius: 20, marginRight: 8}} src={element.info.picture}/>
                                                <small style={{fontSize: 14}}>{element.info.name}:</small>
                                            </div>
                                            <div style={{marginTop: 10, display: 'flex', flexDirection: 'row', flexWrap: 'wrap', height: 'auto'}}>
                                                <p style={{fontSize: 14, backgroundColor: '#CBF7FF', borderRadius: 8, padding: 5}}>{element.message}</p>
                                            </div>    
                                        </div>
                                    ) : (
                                        <div style={{margin: 10, display: 'flex', flexDirection: 'column'}}>
                                            <div display={{display: 'flex', flexDirection: 'row'}}>
                                                <img style={{width: 30, borderRadius: 20, marginRight: 8}} src={element.info.picture}/>
                                                <small style={{fontSize: 14}}>{element.info.name}:</small>
                                            </div>
                                            <div style={{marginTop: 10, display: 'flex', flexDirection: 'row', flexWrap: 'wrap', height: 'auto'}}>
                                                <p style={{fontSize: 14, backgroundColor: '#F2F2F2', borderRadius: 8, padding: 5}}>{element.message}</p>
                                            </div>    
                                        </div>
                                    )
                                    )
                                })}
                            </div>
                        </div >
                        <form>
                            <input type="text"  value={message} onChange={(event) => setMessage(event.target.value)} class="ml-3 mb-1 form-control" placeholder="Mensagem"/>
                            <button type="button" style={{fontSize: 14}} type="submit" onClick={(event) => sendMessage(event)}  class="ml-3 btn btn-primary btn-lg btn-block">Enviar menssagem</button>   
                        </form>
                    </div>
                    <div style={{display: 'flex', height: '100%',width: '30%', marginLeft: 10}}>
                        <div 
                        style={{
                            display: 'flex', 
                            flexDirection: 'column', 
                            backgroundColor: 'white', 
                            height: '78%', 
                            width: '100%',
                            margin: 20,
                            borderRadius: 4,
                            overflow: 'scroll'
                            }}>
                        <div data-spy="scroll" data-offset="0">
                            {users.map(element => {
                                    if (element.picture.data !== null) {
                                            return (
                                            <div style={{margin: 10, display: 'flex', flexDirection: 'column'}}>
                                                <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>
                                                    <img style={{width: 38, borderRadius: 20, marginRight: 8}} src={element.picture}/>
                                                    <small style={{fontSize: 14}}>{element.name}</small>  
                                                    <svg width="1em" color="green" height="0.5em" viewBox="0 0 16 16" className="bi bi-circle-fill ml-2" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                                        <circle cx="8" cy="8" r="8"/>
                                                    </svg>
                                                </div>
                                            </div>
                                        )
                                    }
                                    // if (element.picture !== null) {
                                    //     return (
                                    //     <div style={{margin: 10, display: 'flex', flexDirection: 'column'}}>
                                    //         <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>
                                    //             <img style={{width: 38, borderRadius: 20, marginRight: 8}} src={element.picture}/>
                                    //             <small style={{fontSize: 14}}>{element.name}</small>  
                                    //             <svg width="1em" color="green" height="0.5em" viewBox="0 0 16 16" className="bi bi-circle-fill ml-2" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    //                 <circle cx="8" cy="8" r="8"/>
                                    //             </svg>
                                    //         </div>
                                    //     </div>
                                    //     )
                                    // }
                                })}
                        </div>
                        </div>
                    </div>
                </React.Fragment>
            )}
        </div>
    )
}
ReactDOM.render(<Chat />, document.getElementById('mydiv'))
</script>
    <script>
        $('[data-spy="scroll"]').each(function () {
        var $spy = $(this).scrollspy('refresh')
        });
    </script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV" crossorigin="anonymous"></script>
</body>
</html>